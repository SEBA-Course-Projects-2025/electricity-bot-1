"""many-to-many + unassigned_devices

Revision ID: 59d63476afcd
Revises: 7bdb0a68dcb0
Create Date: 2025-06-11 13:48:09.860722

"""

from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "59d63476afcd"
down_revision = "7bdb0a68dcb0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unassigned_devices",
        sa.Column("device_id", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("device_id"),
    )
    op.create_table(
        "user_device_association",
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("device_id", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["device_id"], ["devices.device_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
    )
    op.drop_index(op.f("owner_email"), table_name="devices")
    op.drop_column("devices", "owner_email")
    op.drop_column("devices", "owner_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "devices", sa.Column("owner_id", mysql.VARCHAR(length=255), nullable=False)
    )
    op.add_column(
        "devices", sa.Column("owner_email", mysql.VARCHAR(length=255), nullable=False)
    )
    op.create_index(op.f("owner_email"), "devices", ["owner_email"], unique=True)
    op.drop_table("user_device_association")
    op.drop_table("unassigned_devices")
    # ### end Alembic commands ###
