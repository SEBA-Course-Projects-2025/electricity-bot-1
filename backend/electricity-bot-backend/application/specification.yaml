# to see the specification at https://editor.swagger.io, copy the code below and paste it into the editor
openapi: 3.0.0
info:
  title: Electricity Bot API
  version: 1.0.0
  description: >
    REST API for Raspberry Pi power-monitoring devices and client applications.
    Supports Google-based authentication via Keycloak, user/device management,
    power-status measurements, real-time status checks and statistics.

paths:
  /api/devices:
    get:
      summary: Get all devices
      responses:
        200:
          description: List of devices or empty list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        500:
          description: Failed to fetch devices

    post:
      summary: Create a new device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - device_id
              properties:
                user_id:
                  type: string
                  format: uuid
                device_id:
                  type: string
                  format: uuid
      responses:
        201:
          description: Device successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  device_id:
                    type: string
                  user_id:
                    type: string
                  message:
                    type: string
        400:
          description: Invalid input or duplicate ID
        422:
          description: Validation error
        500:
          description: Server error

  /api/devices/{device_id}:
    get:
      summary: Get a particular device
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Device found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        400:
          description: Invalid device ID format
        404:
          description: Device not found
        500:
          description: Server error

    delete:
      summary: Delete a particular device
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Device deleted
        400:
          description: Invalid device ID format
        404:
          description: Device not found
        500:
          description: Server error

  /api/devices/{device_id}/owners:
    get:
      summary: Get owners of a device
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: Invalid device ID format
        404:
          description: No owners found or device does not exist
        500:
          description: Server error

  /api/users/{user_id}/devices:
    get:
      summary: Get devices associated with a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        400:
          description: Invalid user_id format
        500:
          description: Server error

components:
  schemas:
    Device:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
        last_seen:
          type: string
          format: date-time
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        email:
          type: string