# to see the specification at https://editor.swagger.io, copy the code below and paste it into the editor
# to see the specification at https://editor.swagger.io, copy the code below and paste it into the editor
openapi: 3.0.0
info:
  title: Electricity Bot API
  version: 1.0.0
  description: Description of how the server communicates with a Raspberry Pi and a client (app and website)

servers:
  - url: http://localhost:5000

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string

    Measurement:
      type: object
      required:
        - device_id
        - outgate_status
      properties:
        device_id:
          type: string
          format: uuid
        outgate_status:
          type: boolean

    MeasurementStatistics:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        events:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              outgate_status:
                type: boolean

    Device:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        owner_email:
          type: string
          format: email
        last_seen:
          type: string
          format: date-time

paths:
  /api/users:
    post:
      summary: Create a new user with device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - device_id
                - first_name
                - last_name
              properties:
                email:
                  type: string
                  format: email
                device_id:
                  type: string
                  format: uuid
                first_name:
                  type: string
                last_name:
                  type: string
            examples:
              userExample:
                summary: Create sample user
                value:
                  email: "olesia3@gmail.com"
                  device_id: "128e4560-e80b-1203-a456-426614174000"
                  first_name: "Olesia"
                  last_name: "Mykhailyshyn"
      responses:
        '201':
          description: User created
        '400':
          description: Missing required field
        '422':
          description: Validation failed
        '500':
          description: Unexpected server error

  /api/users.:
    get:
      summary: Get list of users with optional filters and pagination
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          example: 1
        - in: query
          name: per_page
          schema:
            type: integer
            minimum: 1
          example: 3
        - in: query
          name: first_name
          schema:
            type: string
          example: Olesia
        - in: query
          name: last_name
          schema:
            type: string
          example: Mykhailyshyn
      responses:
        '200':
          description: Paginated list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  per_page:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Invalid pagination parameters
        '500':
          description: Failed to fetch users

  /api/users/{user_id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
          example: d78c3244-2376-4321-8bee-26c460f5432b
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid UUID format
        '404':
          description: User not found
        '500':
          description: Failed to fetch user

    patch:
      summary: Update user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
          example: d78c3244-2376-4321-8bee-26c460f5432b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                first_name:
                  type: string
                last_name:
                  type: string
            examples:
              updateExample:
                summary: Update user first name
                value:
                  first_name: "OlesiaUpdated"
      responses:
        '200':
          description: User updated
        '400':
          description: Invalid UUID format or update failed
        '404':
          description: User not found
        '422':
          description: Validation error

    delete:
      summary: Delete user by ID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
          example: d78c3244-2376-4321-8bee-26c460f5432b
      responses:
        '200':
          description: User deleted
        '400':
          description: Invalid UUID format or delete failed
        '404':
          description: User not found

  /api/devices:
    get:
      summary: Get devices with optional filters and pagination
      parameters:
        - in: query
          name: owner_id
          schema:
            type: string
            format: uuid
          example: 3bdc2a34-1d29-431e-9f48-e0aa2aa2341f
        - in: query
          name: owner_email
          schema:
            type: string
            format: email
          example: olesia3@gmail.com
        - in: query
          name: page
          schema:
            type: integer
            example: 1
        - in: query
          name: per_page
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: List of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '400':
          description: Invalid pagination parameters
        '500':
          description: Device fetch failed

  /api/devices/{device_id}:
    get:
      summary: Get a device by ID
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
          example: 128e4560-e80b-1203-a456-426614174000
      responses:
        '200':
          description: Device details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          description: Device not found
        '500':
          description: Failed to fetch device

    delete:
      summary: Delete a device by ID
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
          example: 128e4560-e80b-1203-a456-426614174000
      responses:
        '200':
          description: Device deleted
        '404':
          description: Device not found
        '500':
          description: Failed to delete device

  /api/measurements:
    post:
      summary: Submit a new measurement from a device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
            examples:
              validMeasurement:
                summary: A valid measurement
                value:
                  device_id: "128e4560-e80b-1203-a456-426614174000"
                  outgate_status: true
      responses:
        '201':
          description: Measurement saved
        '400':
          description: Missing field
        '404':
          description: Device not registered
        '422':
          description: Invalid UUID or data format
        '500':
          description: Unexpected server error

  /api/statistics/day/{device_id}:
    get:
      summary: Get power events for the last 24 hours
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
          example: 128e4560-e80b-1203-a456-426614174000
      responses:
        '200':
          description: Events returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementStatistics'
        '404':
          description: Device not registered
        '422':
          description: Invalid device ID format
        '500':
          description: Could not retrieve statistics

  /api/statistics/week/{device_id}:
    get:
      summary: Get power events for the last 7 days
      parameters:
        - in: path
          name: device_id
          required: true
          schema:
            type: string
            format: uuid
          example: 128e4560-e80b-1203-a456-426614174000
      responses:
        '200':
          description: Events returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementStatistics'
        '404':
          description: Device not registered
        '422':
          description: Invalid device ID format
        '500':
          description: Could not retrieve statistics